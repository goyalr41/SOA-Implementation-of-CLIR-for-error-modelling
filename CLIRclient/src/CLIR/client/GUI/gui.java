/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package CLIR.client.GUI;

import java.awt.Window;

import javax.swing.JCheckBox;
import javax.swing.JList;



import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.Window;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.ListModel;

import CLIR.client.queryclient;
//import static trygui.Hin_error.centreWindow;

/**
 *
 * @author Administrator
 */
public class gui extends javax.swing.JFrame {

    /**
     * Creates new form gui
     */
    
      String lang;
     JCheckBox engButton;
     JCheckBox hindiButton;
     boolean output_englang;
     boolean  output_hindilang;
     String querytext ;
     private JList listbox;
     private JList listbox1;
     //setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
     
     public static void centreWindow(Window frame) {
    Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
    int x = (int) ((dimension.getWidth() - frame.getWidth()) / 2);
    int y = (int) ((dimension.getHeight() - frame.getHeight()) / 2);
    frame.setLocation(x, y);
     }
     
     public static BufferedImage resize(BufferedImage image, int width, int height) {
    BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
    Graphics2D g2d = (Graphics2D) bi.createGraphics();
    g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
    g2d.drawImage(image, 0, 0, width, height, null);
    g2d.dispose();
    return bi;
}
    public gui() throws IOException {
        
        
        
        
        initComponents();
          engButton = Eng_check;    
          hindiButton = hin_check;
          engdoc.setVisible(false);
          doclist.setVisible(false);
           hindidoc.setVisible(false);
          output_english.setVisible(false);
          File f  = new File("C:/Users/hp/workspace/CLIRserverfi/src/CLIR/client/GUI/QuestionMark.jpg");
          BufferedImage image = ImageIO.read(f);
          BufferedImage resizedImage = resize(image,200,400);//resize the image to 100x100
          
          centreWindow(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        output_english = new javax.swing.JTabbedPane();
        tab_eng = new javax.swing.JPanel();
        engdoc = new javax.swing.JScrollPane();
        doclist = new javax.swing.JList();
        eng_query = new javax.swing.JLabel();
        engtotal_docs = new javax.swing.JLabel();
        tab_hindi = new javax.swing.JPanel();
        hindidoc = new javax.swing.JScrollPane();
        hin_list = new javax.swing.JList();
        hindi_query = new javax.swing.JLabel();
        hindi_totaldocs = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        querytextbox = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        enter_lang1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        Eng_check = new javax.swing.JCheckBox();
        hin_check = new javax.swing.JCheckBox();
        submit = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(null);

        output_english.setAlignmentX(10.0F);
        output_english.setAlignmentY(3.0F);

        doclist.setBorder(new javax.swing.border.SoftBevelBorder(0));
        doclist.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        doclist.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        doclist.setPreferredSize(new java.awt.Dimension(400, 400));
        engdoc.setViewportView(doclist);

        javax.swing.GroupLayout tab_engLayout = new javax.swing.GroupLayout(tab_eng);
        tab_eng.setLayout(tab_engLayout);
        tab_engLayout.setHorizontalGroup(
            tab_engLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(engdoc, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
            .addGroup(tab_engLayout.createSequentialGroup()
                .addComponent(eng_query, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(engtotal_docs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        tab_engLayout.setVerticalGroup(
            tab_engLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab_engLayout.createSequentialGroup()
                .addGroup(tab_engLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eng_query, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(tab_engLayout.createSequentialGroup()
                        .addComponent(engtotal_docs, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(engdoc, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        output_english.addTab("English", tab_eng);

        tab_hindi.setAlignmentX(10.0F);
        tab_hindi.setAlignmentY(10.0F);
        tab_hindi.setFont(new java.awt.Font("Lucida Bright", 3, 14)); // NOI18N
        tab_hindi.setPreferredSize(new java.awt.Dimension(1000, 500));

        hin_list.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        hindidoc.setViewportView(hin_list);

        javax.swing.GroupLayout tab_hindiLayout = new javax.swing.GroupLayout(tab_hindi);
        tab_hindi.setLayout(tab_hindiLayout);
        tab_hindiLayout.setHorizontalGroup(
            tab_hindiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hindidoc)
            .addGroup(tab_hindiLayout.createSequentialGroup()
                .addComponent(hindi_query, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(hindi_totaldocs, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 25, Short.MAX_VALUE))
        );
        tab_hindiLayout.setVerticalGroup(
            tab_hindiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab_hindiLayout.createSequentialGroup()
                .addGroup(tab_hindiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hindi_query, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                    .addComponent(hindi_totaldocs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hindidoc, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        output_english.addTab("Hindi", tab_hindi);

        jPanel1.add(output_english);
        output_english.setBounds(0, 270, 620, 220);

        jPanel2.setOpaque(false);
        jPanel2.setLayout(null);

        querytextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                querytextboxActionPerformed(evt);
            }
        });
        jPanel2.add(querytextbox);
        querytextbox.setBounds(169, 20, 400, 30);

        jLabel1.setFont(new java.awt.Font("Sylfaen", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Search For: ");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(10, 20, 110, 20);

        jLabel2.setFont(new java.awt.Font("Sylfaen", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Query Language: ");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(10, 70, 140, 20);

        enter_lang1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "English", "Hindi" }));
        enter_lang1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enter_lang1ActionPerformed(evt);
            }
        });
        jPanel2.add(enter_lang1);
        enter_lang1.setBounds(170, 70, 110, 20);

        jLabel3.setFont(new java.awt.Font("Sylfaen", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Find Doucments In: ");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(10, 120, 140, 22);

        Eng_check.setForeground(new java.awt.Color(255, 255, 255));
        Eng_check.setText("English");
        Eng_check.setOpaque(false);
        Eng_check.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Eng_checkItemStateChanged(evt);
            }
        });
        Eng_check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Eng_checkActionPerformed(evt);
            }
        });
        jPanel2.add(Eng_check);
        Eng_check.setBounds(170, 120, 250, 20);

        hin_check.setForeground(new java.awt.Color(255, 255, 255));
        hin_check.setText("Hindi");
        hin_check.setOpaque(false);
        hin_check.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                hin_checkItemStateChanged(evt);
            }
        });
        hin_check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hin_checkActionPerformed(evt);
            }
        });
        jPanel2.add(hin_check);
        hin_check.setBounds(170, 160, 240, 23);

        submit.setIcon(new javax.swing.ImageIcon("C:/Users/hp/workspace/CLIRserverfi/src/CLIR/client/GUI/button.png")); // NOI18N
        submit.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					submitActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });
        jPanel2.add(submit);
        submit.setBounds(180, 200, 90, 40);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 620, 260);

        jLabel4.setIcon(new javax.swing.ImageIcon("C:/Users/hp/workspace/CLIRserverfi/src/CLIR/client/GUI/the_big_question_mark.png")); // NOI18N
        jPanel1.add(jLabel4);
        jLabel4.setBounds(0, 0, 620, 490);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Eng_checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Eng_checkActionPerformed
        
       
        
        // TODO add your handling code here:
    }//GEN-LAST:event_Eng_checkActionPerformed

    private void querytextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_querytextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_querytextboxActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_submitActionPerformed

    	  engdoc.setVisible(true);
          doclist.setVisible(true);
          hindidoc.setVisible(true);
          hin_list.setVisible(true);
          
    	   hindi_query.setText("");
           hindi_totaldocs.setText("");
         DefaultListModel hinlistModel1;
         hinlistModel1 = new DefaultListModel();
         //List hinl = new ArrayList();
         //hinl.add("");
         hinlistModel1.clear();
         //hinlistModel.addElement("");
         hin_list.setModel(hinlistModel1);
         
       
           
            eng_query.setText("");
            engtotal_docs.setText("");
            DefaultListModel listModel1;
            listModel1 = new DefaultListModel();
            //List l = new ArrayList();
            //l.add("Jane Doe");
            listModel1.clear();
            doclist.setModel(listModel1);
            
        querytext = "English";
         querytext = querytextbox.getText();
         
         queryclient qcl = new queryclient();
        
        //if (querytext.equals(null))
        lang = (String)enter_lang1.getSelectedItem(); 
        //System.out.println("query is " + querytext );
         //System.out.println("\nquery lang is " + lang );
         if (engButton.isSelected())
             output_englang = true;
         else output_englang = false;
         if (hindiButton.isSelected())
             output_hindilang = true;
         else output_hindilang = false;
         
         //if(lang.compareToIgnoreCase("english") == 0) {
        	 
        // }
         qcl.query(querytext, lang, "yes");
         
         //System.out.println("\nvalu of checkbox" +  output_englang + "  hindi " +  output_hindilang);
         output_english.setVisible(true);
          //output_english.setVisible(true);
         /////////////////////// For english ////////////////////////////////////////////
         if (output_englang) { 
        	 
         
                 engdoc.setVisible(true);
                 doclist.setVisible(true);
                
                 eng_query.setText(queryclient.Englishquery);
                   
                DefaultListModel listModel;
                listModel = new DefaultListModel();
                List l = queryclient.Enlist;
                
                for (int i = 0; i < l.size(); i++) {
                    Object element = l.get(i);
                    listModel.addElement(element);
   
                }
                String s = "";
                s = s + l.size();
                engtotal_docs.setText(s);
                ///////////////to check list content only/////////////////
                listbox = new JList(listModel);
                for(int i = 0; i < listbox.getModel().getSize(); i++) {
                        System.out.println(listbox.getModel().getElementAt(i));
                }
             /////////////////////////////////////////////////////////////////////
              doclist.setModel(listModel);
              //engdoc.setVisible(true);
              for(int i = 0; i < doclist.getModel().getSize(); i++) {
                         System.out.println(doclist.getModel().getElementAt(i));
              }
         }
        ///////////////////////////////FOR HINDIIIIIIIII //////////////////////////////////////////////////
         if (output_hindilang) {  
             
                            hindidoc.setVisible(true);
                            hin_list.setVisible(true);
                            hindi_query.setText(queryclient.Hindiquery);
                            DefaultListModel hinlistModel;
                            hinlistModel = new DefaultListModel();
                            List hinl = queryclient.Hinlist;
       
                          for (int i = 0; i <hinl.size(); i++) {
                                   Object element = hinl.get(i);
                                   hinlistModel.addElement(element);
   
                          }
                           //checking content of list only ////////////////////
                          listbox1 = new JList(hinlistModel);
                          for(int i = 0; i < listbox1.getModel().getSize(); i++) {
                                     System.out.println(listbox1.getModel().getElementAt(i));
                          }
                          ////////////////////////////////////////////////
                           String s = "";
                           s = s + hinl.size();
                           hindi_totaldocs.setText(s);
                           hin_list.setModel(hinlistModel);
      //engdoc.setVisible(true);
       
         }
         if (output_englang && !output_hindilang) {
               hindi_query.setText("");
               hindi_totaldocs.setText("");
             DefaultListModel hinlistModel;
             hinlistModel = new DefaultListModel();
             //List hinl = new ArrayList();
             //hinl.add("");
             hinlistModel.clear();
             //hinlistModel.addElement("");
             hin_list.setModel(hinlistModel);
             
               
         } else if (!output_englang && output_hindilang) {
                eng_query.setText("");
                engtotal_docs.setText("");
                DefaultListModel listModel;
                listModel = new DefaultListModel();
                //List l = new ArrayList();
                //l.add("Jane Doe");
                listModel.clear();
                doclist.setModel(listModel);
         }
             
        
        // TODO add your handling code here:
    }//GEN-LAST:event_submitActionPerformed

    private void enter_lang1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enter_lang1ActionPerformed
        
         JComboBox cb = (JComboBox)evt.getSource();
         lang = (String)enter_lang1.getSelectedItem();
         
         
         //updateLabel(lang);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_enter_lang1ActionPerformed

    private void hin_checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hin_checkActionPerformed
      
       
        // TODO add your handling code here:
    }//GEN-LAST:event_hin_checkActionPerformed

    private void Eng_checkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Eng_checkItemStateChanged
          /* Object source = evt.getItemSelectable(); 
        if (source == engButton) {
            output_englang = true;
        } else output_englang = false;  
       */
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_Eng_checkItemStateChanged

    private void hin_checkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_hin_checkItemStateChanged
         /*Object source = evt.getItemSelectable();  
        if (source == hindiButton) {
            output_hindilang = true;
        } else output_hindilang = false;
        */
        
        // TODO add your handling code here:
    }//GEN-LAST:event_hin_checkItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new gui().setVisible(true);
                  
                } catch (IOException ex) {
                    Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Eng_check;
    private javax.swing.JList doclist;
    private javax.swing.JLabel eng_query;
    private javax.swing.JScrollPane engdoc;
    private javax.swing.JLabel engtotal_docs;
    private javax.swing.JComboBox enter_lang1;
    private javax.swing.JCheckBox hin_check;
    private javax.swing.JList hin_list;
    private javax.swing.JLabel hindi_query;
    private javax.swing.JLabel hindi_totaldocs;
    private javax.swing.JScrollPane hindidoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane output_english;
    private javax.swing.JTextField querytextbox;
    private javax.swing.JButton submit;
    private javax.swing.JPanel tab_eng;
    private javax.swing.JPanel tab_hindi;
    // End of variables declaration//GEN-END:variables
}
