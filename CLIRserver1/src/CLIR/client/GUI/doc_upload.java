package CLIR.client.GUI;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.Window;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.SwingWorker;
//import static trygui.Hin_error.centreWindow;

import CLIR.client.GUIinteractor;


/**
 *
 * @author Administrator
 */


    
public class doc_upload extends javax.swing.JFrame {

	public File file_uplo;
	public String language;
	public String type_file;
    
	 class Task extends SwingWorker<Void, Void> {
	         public void finishUp() {
	        // Executed in event dispatching thread
	        Toolkit.getDefaultToolkit().beep();
	       // setCursor(null); // turn off the wait cursor
	        
	        }
	         @Override
	        public Void doInBackground() throws FileNotFoundException, IOException {
	            // Main task. Executed in background thread.
	            //walkFileTree(theSubfile);
	            //int done = fn(1000);
	            boolean done1 = false;
	            int i = 0;
	           GUIinteractor guii = new GUIinteractor();
	            guii.upload(file_uplo, language, type_file);
	            //System.out.println("aaya");
	            progressBar.setVisible(false);
                progressBar.setString("Document Uploaded");
                progressBar.setIndeterminate(false);
                progressBar.setStringPainted(false);
                JOptionPane.showOptionDialog(null, "Document Uploaded","Success", JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE, null, new Object[]{"Ok"}, null);
               
	            return null;
	        }

	        @Override
	        public void done() {
	            
	            
	            finishUp();
	        }
	    }
    /**
     * Creates new form doc_upload
     */
    //JProgressBar progressBar = new JProgressBar();
    
    
    
  //class abc{  
   

//  }
   
    
    
    
    
      public static void centreWindow(Window frame) {
    Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
    int x = (int) ((dimension.getWidth() - frame.getWidth()) / 2);
    int y = (int) ((dimension.getHeight() - frame.getHeight()) / 2);
    frame.setLocation(x, y);                     
      }         
    
     public static BufferedImage resize(BufferedImage image, int width, int height) {
    BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
    Graphics2D g2d = (Graphics2D) bi.createGraphics();
    g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
    g2d.drawImage(image, 0, 0, width, height, null);
    g2d.dispose();
    return bi;
}
    public doc_upload() throws IOException {
        initComponents();
         this.setSize(900, 700);
         logscroll.setVisible(false);
         log1.setVisible(false);
         File f  = new File("C:/Users/hp/workspace/CLIRserver1/src/CLIR/client/GUI/books.jpg");
         BufferedImage image = ImageIO.read(f);
         BufferedImage resizedImage = resize(image,10,10);//resize the image to 100x100
       // wait = progressBar;
         
         centreWindow(this);
         progressBar.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pan = new javax.swing.JPanel();
        enter_lang = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        type = new javax.swing.JComboBox();
        logscroll = new javax.swing.JScrollPane();
        log1 = new javax.swing.JTextArea();
        browse_file = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(700, 700));

        pan.setOpaque(false);
        pan.setLayout(null);

        enter_lang.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "English", "Hindi" }));
        enter_lang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enter_langActionPerformed(evt);
            }
        });
        pan.add(enter_lang);
        enter_lang.setBounds(230, 210, 180, 20);

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("File Format");
        pan.add(jLabel1);
        jLabel1.setBounds(110, 260, 90, 22);
        pan.add(progressBar);
        progressBar.setBounds(380, 570, 200, 30);

        type.setBackground(new java.awt.Color(204, 204, 204));
        type.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Text File", "Image File" }));
        type.setOpaque(false);
        pan.add(type);
        type.setBounds(230, 260, 180, 20);

        logscroll.setBorder(null);
        logscroll.setOpaque(false);

        log1.setColumns(20);
        log1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 16)); // NOI18N
        log1.setForeground(new java.awt.Color(255, 255, 255));
        log1.setRows(5);
        log1.setBorder(null);
        log1.setOpaque(false);
        logscroll.setViewportView(log1);

        pan.add(logscroll);
        logscroll.setBounds(490, 380, 140, 60);

        browse_file.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        browse_file.setText("Browse");
        browse_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browse_fileActionPerformed(evt);
            }
        });
        pan.add(browse_file);
        browse_file.setBounds(230, 330, 81, 27);

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("   Language");
        pan.add(jLabel2);
        jLabel2.setBounds(100, 200, 120, 22);

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon("C:/Users/hp/workspace/CLIRserver1/src/CLIR/client/GUI/books.jpg")); // NOI18N
        pan.add(jLabel4);
        jLabel4.setBounds(-40, -170, 1060, 890);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pan, javax.swing.GroupLayout.PREFERRED_SIZE, 947, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pan, javax.swing.GroupLayout.PREFERRED_SIZE, 1067, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enter_langActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enter_langActionPerformed
         JComboBox cb = (JComboBox)evt.getSource();
         String lang = (String)enter_lang.getSelectedItem();
        //updateLabel(petName);
        // TODO add your handling code here:
    }//GEN-LAST:event_enter_langActionPerformed

    private void browse_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browse_fileActionPerformed
          final JFileChooser fc = new JFileChooser();
          int returnVal = fc.showOpenDialog(doc_upload.this);
         // logscroll.setVisible(true);
          //log1.setVisible(true);
         String type1 = (String)type.getSelectedItem();
         if(type1.compareToIgnoreCase("text file") == 0) {
        	 type1 = "text";
         }else {
        	 type1 = "image";
         }
         type_file = type1;
         language = (String)enter_lang.getSelectedItem();
         language = language.toLowerCase().trim();
          if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                file_uplo = file;
                String filename = file.getName();
                //System.out.println("path is filename" + filename);
                //This is where a real application would save the file.
              /*Object[] options = {"Yes, please",
                    "No, thanks",
                    "No eggs, no ham!"};
               int n = JOptionPane.showOptionDialog(this,
                 "Would you like some green eggs to go "
                  + "with that ham?",
                  "A Silly Question",
              JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE, null,options, options[2]);
                */
                //this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR)); 
                //JOptionPane.showOptionDialog(null, "Uploading in Progress","Progress", JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE, null, new Object[]{}, null);
                 //JOptionPane.showOptionDialog(null, "Uploading in Progress","Progress", JOptionPane.DEFAULT_OPTION,JOptionPane.INFO
                //JOptionPane.
                 //ProgressMonitorDemo p = new  ProgressMonitorDemo();
                 //p.createAndShowGUI();
                         //  log1.append("File Uploaded " + file.getName() + "." + "\n");
            
           
                //final JProgressBar aJProgressBar = new JProgressBar(JProgressBar.VERTICAL);
                 //aJProgressBar.setStringPainted(true);
                 //aJProgressBar.setIndeterminate(true);

                 // new MyWorker().execute();
               /* class prog extends SwingWorker{
                       
                       //this.add(progressBar);
                       
                      protected String doInBackground() {
                           wait.setVisible(true);
                           wait.setIndeterminate(true);

                                        // Do my downloading code
                                        return "Done.";
                              }

                          protected void done() {
                          wait.setVisible(false);
                           }

                 
               };

                
                  
                   new prog().execute();
                 */
                 
                 
                
                progressBar.setVisible(true);
                 progressBar.setString("Uploading " + filename );
                 progressBar.setIndeterminate(true);
                  progressBar.setStringPainted(true);
        // start the background task
                  //abc c;
                Task task = new Task();
                task.execute();
                
               /* progressBar.setVisible(true);
                progressBar.setString("Document Uploaded");
                progressBar.setIndeterminate(false);
                progressBar.setStringPainted(false);*/
                
                
                
                    
                 
                 
                 
                 
                 
                 
                 
                 
          
          } else {
              JOptionPane.showOptionDialog(null, "Upload cancelled by user","Progress", JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE, null, new Object[]{"OK"}, null);  
              //log1.append("Upload command cancelled by user." + "\n");
            }
            //log1.setCaretPosition(log1.getDocument().getLength());
          
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_browse_fileActionPerformed
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(doc_upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(doc_upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(doc_upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(doc_upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        //java.awt.EventQueue
                javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                try {
                    new doc_upload().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(doc_upload.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browse_file;
    private javax.swing.JComboBox enter_lang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextArea log1;
    private javax.swing.JScrollPane logscroll;
    private javax.swing.JPanel pan;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JComboBox type;
    // End of variables declaration//GEN-END:variables
}
